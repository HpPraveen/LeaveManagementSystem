@model LeaveManagementSystem.Models.EmployeeMaster

@{
    ViewBag.Title = "Create";
}

<h2>Create New Employee</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeCode, new { htmlAttributes = new { @class = "form-control", placeholder = "E0000" } })
                @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("employeeType", new SelectList((System.Collections.IEnumerable)ViewData["EmployeeType"], "", ""), "--Select Employee Type--", new { Class = "ddlStyle", id = "ddlEmployeeType", onChange = "return ChangeEmployeeType(this)" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeSupervisorCode, htmlAttributes: new { @class = "control-label col-md-2", id = "supervisorLbl" })
            <div class="col-md-10">
                @Html.DropDownList("supervisorCode", new SelectList((System.Collections.IEnumerable)ViewData["Supervisor"], "EmployeeCode", "EmployeeName"), "------------------")
                @Html.ValidationMessageFor(model => model.EmployeeSupervisorCode, "", new { @class = "text-danger" })
                &nbsp;
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeLeavePacakge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EmployeeLeavePacakge,
                    new SelectList(Enum.GetValues(typeof(LeaveManagementSystem.Models.LeavePacakge))),
                    "--Select Leave Package--")
                @Html.ValidationMessageFor(model => model.EmployeeLeavePacakge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("View All Employees", "Index")
</div>

@if (TempData["ErrorMessage"] != null)
{
    <span style="color:Red;">  @TempData["ErrorMessage"] </span>
}@if (TempData["SuccessMessage"] != null)
{
    <span style="color:green;">  @TempData["SuccessMessage"] </span>
}

<script type="text/javascript">
    function ChangeEmployeeType(obj) {
        if ($("#ddlEmployeeType option:selected").index() == 0 || $("#ddlEmployeeType option:selected").index() == 1) {
            $("#supervisorCode").show();
            $("#supervisorLbl").show();
        } else {
            $("#supervisorCode").hide();
            $("#supervisorLbl").hide();
        }
    }
</script>